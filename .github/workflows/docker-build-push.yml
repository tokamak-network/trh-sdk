name: Build and Push Docker Images

on:
  push:
    branches:
      - feat/update_Dockerfile-for-internal-test-202508
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: tokamaknetwork/trh-sdk

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=main,enable={{is_default_branch}}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.amd
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.arm
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Output image info
        run: |
          echo "=== Docker Build Summary ==="
          echo "Repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"
          echo "‚úÖ Successfully pushed to Docker Hub!"
          echo "üîó View images at: https://hub.docker.com/r/${{ env.IMAGE_NAME }}/tags"
          echo "=== Build Complete ==="

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Docker build failed!"
          echo "Check the logs above for more details."
          echo "Common issues:"
          echo "- Dockerfile syntax errors"
          echo "- Missing dependencies"
          echo "- Docker Hub authentication issues"
          echo "- ARM64 build timeout (try increasing timeout or skipping ARM64 build)"
